version: '3.4'
services:
  postgres-data:
    image: postgres:latest
    command: ["postgres", "-c", "max_connections=2000"]
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "1212:5432"
    networks:
      - ConfHubNet
  
  redis-cache:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis_cache_sch:/data
    networks:
      - ConfHubNet

  minio:
    image: minio/minio:latest
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
    command: server /data
    ports:
      - "9000:9000"
    volumes:
      - minio-data:/data
    networks:
      - ConfHubNet

  sibadi-conf-hub:
    build: 
      context: .
      dockerfile: backend/Dockerfile
    container_name: confhub-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-data:5432/ConfHubData
      SPRING_DATASOURCE_USERNAME: ConfHubAdmin
      SPRING_DATASOURCE_PASSWORD: ConfHubAdmPass
      MINIO_ENDPOINT: http://minio:9000
      MINIO_ACCESS_KEY: ${MINIO_ACCESS_KEY}
      MINIO_SECRET_KEY: ${MINIO_SECRET_KEY}
      MINIO_BUCKET: confhub-files
      SPRING_DATA_REDIS_HOST: redis-cache
      SPRING_DATA_REDIS_PORT: 6379
    depends_on:
      - redis-cache
      - postgres-data
      - minio
    networks:
      - ConfHubNet

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: confhub-frontend
    ports:
      - "3000:80"
    depends_on:
      - sibadi-conf-hub
    networks:
      - ConfHubNet
    restart: unless-stopped

networks:
  ConfHubNet:
    driver: bridge

volumes:
  minio-data:
    driver: local
  redis_cache_sch:
    driver: local